/*
House Robber II

Note: This is an extension of House Robber.

After robbing those houses on that street, the thief has found himself a new place for his thievery so that he will not get too much attention. This time, all houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, the security system for these houses remain the same as for those in the previous street.

Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.
*/

public class Solution {
    public int rob(int[] nums) {
        if (nums.length == 1)
            return nums[0];
        int temp1, temp2;
        int result1, result2;
        
        temp1 = temp2 = result1 = result2 = 0;
        
        // Exclude the first house and include the last one
        for (int i = 1; i < nums.length; i++) {
            int temp = Math.max(temp1 + nums[i], temp2);
            temp1 = temp2;
            temp2 = temp;
        }
        result1 = temp2;
        
        temp1 = temp2 = 0;
        // Include the first house and exclude ast one
        for (int i = 0; i < nums.length - 1; i++) {
            int temp = Math.max(temp1 + nums[i], temp2);
            temp1 = temp2;
            temp2 = temp;
        }
        result2 = temp2;
        
        // Return max of the two results
        return Math.max(result1, result2);
    }
}